[{"/Users/sandeepkumarjha/Documents/IIITB/PE/tutorhunt-frontend/src/index.js":"1","/Users/sandeepkumarjha/Documents/IIITB/PE/tutorhunt-frontend/src/App.js":"2","/Users/sandeepkumarjha/Documents/IIITB/PE/tutorhunt-frontend/src/reportWebVitals.js":"3","/Users/sandeepkumarjha/Documents/IIITB/PE/tutorhunt-frontend/src/components/login.js":"4","/Users/sandeepkumarjha/Documents/IIITB/PE/tutorhunt-frontend/src/components/signup.js":"5","/Users/sandeepkumarjha/Documents/IIITB/PE/tutorhunt-frontend/src/components/dashboard.js":"6","/Users/sandeepkumarjha/Documents/IIITB/PE/tutorhunt-frontend/src/components/Home.js":"7","/Users/sandeepkumarjha/Documents/IIITB/PE/tutorhunt-frontend/src/components/footer.js":"8","/Users/sandeepkumarjha/Documents/IIITB/PE/tutorhunt-frontend/src/components/reducer.js":"9","/Users/sandeepkumarjha/Documents/IIITB/PE/tutorhunt-frontend/src/components/front.js":"10","/Users/sandeepkumarjha/Documents/IIITB/PE/tutorhunt-frontend/src/components/login_tutor.js":"11","/Users/sandeepkumarjha/Documents/IIITB/PE/tutorhunt-frontend/src/components/signup_tutor.js":"12"},{"size":744,"mtime":1612333927121,"results":"13","hashOfConfig":"14"},{"size":2272,"mtime":1612333144540,"results":"15","hashOfConfig":"14"},{"size":362,"mtime":1612290355300,"results":"16","hashOfConfig":"14"},{"size":5844,"mtime":1612336919675,"results":"17","hashOfConfig":"14"},{"size":3255,"mtime":1612338200532,"results":"18","hashOfConfig":"14"},{"size":732,"mtime":1612338495073,"results":"19","hashOfConfig":"14"},{"size":909,"mtime":1612290355295,"results":"20","hashOfConfig":"14"},{"size":576,"mtime":1612290355296,"results":"21","hashOfConfig":"14"},{"size":577,"mtime":1612336799345,"results":"22","hashOfConfig":"14"},{"size":1234,"mtime":1612338101269,"results":"23","hashOfConfig":"14"},{"size":4670,"mtime":1612328715305,"results":"24","hashOfConfig":"14"},{"size":4469,"mtime":1612328715305,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"15nkket",{"filePath":"29","messages":"30","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"28"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"28"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"28"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"/Users/sandeepkumarjha/Documents/IIITB/PE/tutorhunt-frontend/src/index.js",[],["54","55"],"/Users/sandeepkumarjha/Documents/IIITB/PE/tutorhunt-frontend/src/App.js",["56","57"],"import React, { Component } from 'react';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport {  BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\n\nimport Front from \"./components/front.js\"\nimport SignUp from \"./components/signup.js\";\nimport Home from \"./components/Home.js\";\nimport Dashboard from \"./components/dashboard.js\";\nimport Login from './components/login';\nimport LoginTutor from \"./components/login_tutor.js\";\nimport SignUp_Tutor from \"./components/signup_tutor.js\";\n// import { render } from '@testing-library/react';\n\nexport default class App extends Component{\n  constructor(){\n    super();\n\n    this.state={\n      loggedInStatus:\"LOGGED_IN\",\n      message:\"\"\n    };\n    \n  }\n  \n  callbackFunction = (childData) => {\n        this.setState({message: childData})\n  }\n  render(){\n  return (<Router>\n    <div>\n          <Switch>\n            <Route exact path='/' render={props => (\n                <Front\n                  {...props}\n                  parentCallback = {this.callbackFunction}\n                  />\n                  )} />\n            <Route exact\n              path={\"/sign-in\"}\n              render={props => (\n                <Login\n                  {...props}\n                  //handleLogin={this.handleLogin}\n                  // handleLogout={this.handleLogout}\n                  loggedInStatus={this.state.loggedInStatus}\n                />\n              )} />\n              <Route exact\n              path={\"/sign-in-tutor\"}\n              render={props => (\n                <LoginTutor\n                  {...props}\n                  //handleLogin={this.handleLogin}\n                  // handleLogout={this.handleLogout}\n                  loggedInStatus={this.state.loggedInStatus}\n                />\n              )} />\n            <Route path=\"/sign-up\" component={SignUp} />\n            <Route path=\"/sign-up-tutor\" component={SignUp_Tutor} />\n            <Route exact\n              path={\"/dashboard\"}\n              render={props => (\n                <Dashboard\n                  {...props}\n                  loggedInStatus={this.state.loggedInStatus}\n                  />\n                  )}\n                  />\n          </Switch>\n        \n    </div></Router>\n  );\n}\n}\n\n","/Users/sandeepkumarjha/Documents/IIITB/PE/tutorhunt-frontend/src/reportWebVitals.js",[],"/Users/sandeepkumarjha/Documents/IIITB/PE/tutorhunt-frontend/src/components/login.js",["58","59"],"import React, { Component} from 'react';\nimport {useHistory,BrowserRouter as  Switch, Route,Link } from \"react-router-dom\";\nimport SignUp from \"./signup.js\";\nimport Footer from \"./footer.js\";\n\nimport {connect} from \"react-redux\";\n\n\n   \nclass Login extends Component {\n\n          constructor(props) {\n            super(props);\n            this.handleSubmit=this.handleSubmit.bind(this);\n            \n            this.state = {\n              username:'',\n              password:'',\n              loggedInStatus:'LOGGED_IN'\n            };\n          }\n          history=useHistory;\n          async loginUser(credentials) {\n            const payload={\n                username:credentials.username,\n                password: credentials.password\n            }\n            console.log(payload.username);\n\n\n            let data = await fetch('http://localhost:8082/api/studnet_login', {\n              method: 'POST',\n              headers: {\n                'Content-Type': 'application/json'\n              },\n              body: JSON.stringify(payload)\n            });\n\n\n            let res = await data.json();\n            console.log(res);\n\n            if(res.token==\"T\"){\n              alert(\"Incorect username/password\");\n            }\n            else{\n              this.setState.loggedInStatus=\"LOGGED_IN\";\n              this.props.changeName(payload.username);\n              this.props.changeToken(res.token)\n              this.props.history.push(\"/dashboard\");\n\n\n            }\n            }\n\n\n\n\n          //   fetch('http://localhost:8082/authenticate', {\n          //     method: 'POST',\n          //     headers: {\n          //       'Content-Type': 'application/json'\n          //     },\n          //     body: JSON.stringify(payload)\n          //   })\n          //     .then(res => res.json())\n          //     .then((data) => {\n          //         if(data.token !== 'T'){\n          //          // this.props.handleSuccessfulAuth(data);\n          //          //handleSuccessfulAuth={this.handleSuccessfulAuth}\n          //           this.setState.loggedInStatus=\"LOGGED_IN\";\n          //           this.props.history.push(\"/dashboard\");\n                    \n          //         }\n          //         else{\n          //           alert(\"Bad Credentials...Try again\");\n          //         }\n          //       }\n          //       )\n          //  }\n          \n          \n            \n         handleSubmit = async e => {\n           e.preventDefault();\n          // loginUser({\n          //    username:this.state.username,\n          //    password:this.state.password\n          //  });\n            this.loginUser({username:this.state.username,\n            password:this.state.password});\n           \n         }\n  \n    render() {\n\n\n        return (\n          <div className='App' id='root'>\n          <nav className=\"navbar navbar-expand-lg navbar-light fixed-top\">\n        <div className=\"container\">\n          {/* <Link className=\"navbar-brand\" to={\"/sign-in\"}></Link> */}\n          <div className=\"collapse navbar-collapse\" id=\"navbarTogglerDemo02\">\n            <ul className=\"navbar-nav ml-auto\">\n              <li className=\"nav-item\">\n                <Link className=\"nav-link\"  to={\"/sign-in\"}>Login</Link>\n              </li>\n              <li className=\"nav-item\">\n                <Link className=\"nav-link\"  to={\"/sign-up\"}>Sign-Up</Link>\n              </li>\n            </ul>\n          </div>\n          \n        </div>\n      </nav>\n          \n            <div className=\"auth-wrapper\">\n            <div className=\"auth-inner\">\n            <div class='card-title mt-3'>\n            \n            <form onSubmit={this.handleSubmit}>\n                \n                <h3 font-style=''>Sign In</h3>\n\n                <div className=\"form-group\">\n                    <label>Username</label>\n                    <input name=\"username\" type=\"text\" className=\"form-control\" placeholder=\"Enter username\" onChange={e => this.setState({username:e.target.value})} required/>\n                </div>\n\n                <div className=\"form-group\">\n                    <label>Password</label>\n                    <input name=\"password\" type=\"password\" className=\"form-control\" placeholder=\"Enter password\" onChange={e => this.setState({password:e.target.value})} required/>\n              </div>\n\n                <div className=\"form-group\">\n                    <div className=\"custom-control custom-checkbox\">\n                        <input type=\"checkbox\" className=\"custom-control-input\" id=\"customCheck1\" />\n                        <label className=\"custom-control-label\" htmlFor=\"customCheck1\">Remember Me</label>\n                    </div>\n                </div>\n\n                <button type=\"submit\" className=\"btn btn-primary btn-block\" background-color=\"#ff4516\" >LOGIN</button>\n                <div>\n                <p className=\"forgot-password text-center\" >\n                  <a href=\"/sign-up\">Not Registered ? Sign-Up</a> \n                </p>\n               \n                <p className=\"forgot-password text-center\"> \n                  <a href=\"#\">Forgot Password ?</a>\n                </p>\n                </div>\n                <Switch>\n                    <Route path=\"/sign-up\" component={SignUp} />\n                    \n                </Switch>\n            </form>\n            </div>\n            </div>\n            </div>\n            <Footer />\n            </div>\n            \n        );\n    }\n}\n\n\n\nconst mapDispatchToProps = (dispatch)=>{\n  return {\n    changeName:(name)=>{\n      dispatch(\n       \n          {\n            \"type\":\"CHANGE_NAME\",\n           \"payload\":name\n          }\n        \n      )\n    },\n    changeToken:(token)=>{\n      dispatch(\n       \n        {\n          \"type\":\"CHANGE_TOKEN\",\n         \"payload\":token\n        }\n      \n    )\n    }\n  }\n}\n\n\n\nexport default connect(null,mapDispatchToProps)(Login)\n","/Users/sandeepkumarjha/Documents/IIITB/PE/tutorhunt-frontend/src/components/signup.js",[],"/Users/sandeepkumarjha/Documents/IIITB/PE/tutorhunt-frontend/src/components/dashboard.js",["60"],"/Users/sandeepkumarjha/Documents/IIITB/PE/tutorhunt-frontend/src/components/Home.js",[],"/Users/sandeepkumarjha/Documents/IIITB/PE/tutorhunt-frontend/src/components/footer.js",[],"/Users/sandeepkumarjha/Documents/IIITB/PE/tutorhunt-frontend/src/components/reducer.js",[],"/Users/sandeepkumarjha/Documents/IIITB/PE/tutorhunt-frontend/src/components/front.js",[],"/Users/sandeepkumarjha/Documents/IIITB/PE/tutorhunt-frontend/src/components/login_tutor.js",["61"],"import React, { Component} from 'react';\nimport {useHistory,BrowserRouter as  Switch, Route,Link } from \"react-router-dom\";\nimport SignUp_Tutor from \"./signup_tutor.js\";\nimport Footer from \"./footer.js\";\n\n\n   \nexport default class Login extends Component {\n\n          constructor(props) {\n            super(props);\n            this.handleSubmit=this.handleSubmit.bind(this);\n            \n            this.state = {\n              username:'',\n              password:'',\n              loggedInStatus:'LOGGED_IN'\n            };\n          }\n          history=useHistory;\n          loginUser(credentials) {\n            const payload={\n                username:credentials.username,\n                password: credentials.password\n            }\n            console.log(payload.username);\n            fetch('http://localhost:8082/authenticate', {\n              method: 'POST',\n              headers: {\n                'Content-Type': 'application/json'\n              },\n              body: JSON.stringify(payload)\n            })\n              .then(res => res.json())\n              .then((data) => {\n                  if(data.token !== 'T'){\n                   // this.props.handleSuccessfulAuth(data);\n                   //handleSuccessfulAuth={this.handleSuccessfulAuth}\n                    this.setState.loggedInStatus=\"LOGGED_IN\";\n                    this.props.history.push(\"/dashboard\");\n                    \n                  }\n                  else{\n                    alert(\"Bad Credentials...Try again\");\n                  }\n                }\n                )\n           }\n          \n          \n            \n         handleSubmit = async e => {\n           e.preventDefault();\n          // loginUser({\n          //    username:this.state.username,\n          //    password:this.state.password\n          //  });\n            this.loginUser({username:this.state.username,\n            password:this.state.password});\n           \n         }\n  \n    render() {\n\n\n        return (\n          <div className='App' id='root'>\n          <nav className=\"navbar navbar-expand-lg navbar-light fixed-top\">\n        <div className=\"container\">\n          {/* <Link className=\"navbar-brand\" to={\"/sign-in\"}></Link> */}\n          <div className=\"collapse navbar-collapse\" id=\"navbarTogglerDemo02\">\n            <ul className=\"navbar-nav ml-auto\">\n              <li className=\"nav-item\">\n                <Link className=\"nav-link\"  to={\"/sign-in-tutor\"}>Login</Link>\n              </li>\n              <li className=\"nav-item\">\n                <Link className=\"nav-link\"  to={\"/sign-up-tutor\"}>Sign-Up</Link>\n              </li>\n            </ul>\n          </div>\n          \n        </div>\n      </nav>\n          \n            <div className=\"auth-wrapper\">\n            <div className=\"auth-inner\">\n            <div class='card-title mt-3'>\n            \n            <form onSubmit={this.handleSubmit}>\n                \n                <h3 font-style=''>Sign In</h3>\n\n                <div className=\"form-group\">\n                    <label>Username</label>\n                    <input name=\"username\" type=\"text\" className=\"form-control\" placeholder=\"Enter username\" onChange={e => this.setState({username:e.target.value})} required/>\n                </div>\n\n                <div className=\"form-group\">\n                    <label>Password</label>\n                    <input name=\"password\" type=\"password\" className=\"form-control\" placeholder=\"Enter password\" onChange={e => this.setState({password:e.target.value})} required/>\n              </div>\n\n                <div className=\"form-group\">\n                    <div className=\"custom-control custom-checkbox\">\n                        <input type=\"checkbox\" className=\"custom-control-input\" id=\"customCheck1\" />\n                        <label className=\"custom-control-label\" htmlFor=\"customCheck1\">Remember Me</label>\n                    </div>\n                </div>\n\n                <button type=\"submit\" className=\"btn btn-primary btn-block\" background-color=\"#ff4516\" >LOGIN</button>\n                <div>\n                <p className=\"forgot-password text-center\" >\n                  <a href=\"/sign-up-tutor\">Not Registered ? Sign-Up</a> \n                </p>\n               \n                <p className=\"forgot-password text-center\"> \n                  <a href=\"#\">Forgot Password ?</a>\n                </p>\n                </div>\n                <Switch>\n                    <Route path=\"/sign-up-tutor\" component={SignUp_Tutor} />\n                    \n                </Switch>\n            </form>\n            </div>\n            </div>\n            </div>\n            <Footer />\n            </div>\n            \n        );\n    }\n}\n","/Users/sandeepkumarjha/Documents/IIITB/PE/tutorhunt-frontend/src/components/signup_tutor.js",[],{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","severity":1,"message":"67","line":4,"column":51,"nodeType":"68","messageId":"69","endLine":4,"endColumn":55},{"ruleId":"66","severity":1,"message":"70","line":8,"column":8,"nodeType":"68","messageId":"69","endLine":8,"endColumn":12},{"ruleId":"71","severity":1,"message":"72","line":43,"column":25,"nodeType":"73","messageId":"74","endLine":43,"endColumn":27},{"ruleId":"75","severity":1,"message":"76","line":149,"column":19,"nodeType":"77","endLine":149,"endColumn":31},{"ruleId":"78","severity":1,"message":"79","line":5,"column":5,"nodeType":"80","messageId":"81","endLine":7,"endColumn":6},{"ruleId":"75","severity":1,"message":"76","line":117,"column":19,"nodeType":"77","endLine":117,"endColumn":31},"no-native-reassign",["82"],"no-negated-in-lhs",["83"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'Home' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","no-global-assign","no-unsafe-negation"]