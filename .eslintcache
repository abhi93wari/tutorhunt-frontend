[{"/Users/sandeepkumarjha/Documents/IIITB/PE/tutorhunt-frontend/src/index.js":"1","/Users/sandeepkumarjha/Documents/IIITB/PE/tutorhunt-frontend/src/App.js":"2","/Users/sandeepkumarjha/Documents/IIITB/PE/tutorhunt-frontend/src/reportWebVitals.js":"3","/Users/sandeepkumarjha/Documents/IIITB/PE/tutorhunt-frontend/src/components/reducer.js":"4","/Users/sandeepkumarjha/Documents/IIITB/PE/tutorhunt-frontend/src/components/front.js":"5","/Users/sandeepkumarjha/Documents/IIITB/PE/tutorhunt-frontend/src/components/Home.js":"6","/Users/sandeepkumarjha/Documents/IIITB/PE/tutorhunt-frontend/src/components/login.js":"7","/Users/sandeepkumarjha/Documents/IIITB/PE/tutorhunt-frontend/src/components/dashboard.js":"8","/Users/sandeepkumarjha/Documents/IIITB/PE/tutorhunt-frontend/src/components/login_tutor.js":"9","/Users/sandeepkumarjha/Documents/IIITB/PE/tutorhunt-frontend/src/components/signup_tutor.js":"10","/Users/sandeepkumarjha/Documents/IIITB/PE/tutorhunt-frontend/src/components/signup.js":"11","/Users/sandeepkumarjha/Documents/IIITB/PE/tutorhunt-frontend/src/components/footer.js":"12"},{"size":744,"mtime":1612618836760,"results":"13","hashOfConfig":"14"},{"size":1582,"mtime":1612967043279,"results":"15","hashOfConfig":"14"},{"size":362,"mtime":1612290355300,"results":"16","hashOfConfig":"14"},{"size":964,"mtime":1612344225432,"results":"17","hashOfConfig":"14"},{"size":1222,"mtime":1612619457734,"results":"18","hashOfConfig":"14"},{"size":909,"mtime":1612290355295,"results":"19","hashOfConfig":"14"},{"size":5780,"mtime":1612791269428,"results":"20","hashOfConfig":"14"},{"size":3410,"mtime":1612987435240,"results":"21","hashOfConfig":"14"},{"size":4544,"mtime":1612619457736,"results":"22","hashOfConfig":"14"},{"size":4463,"mtime":1612617746063,"results":"23","hashOfConfig":"14"},{"size":4340,"mtime":1612625649764,"results":"24","hashOfConfig":"14"},{"size":576,"mtime":1612290355296,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"15nkket",{"filePath":"29","messages":"30","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"28"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"28"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"/Users/sandeepkumarjha/Documents/IIITB/PE/tutorhunt-frontend/src/index.js",[],["53","54"],"/Users/sandeepkumarjha/Documents/IIITB/PE/tutorhunt-frontend/src/App.js",["55","56","57"],"/Users/sandeepkumarjha/Documents/IIITB/PE/tutorhunt-frontend/src/reportWebVitals.js",[],"/Users/sandeepkumarjha/Documents/IIITB/PE/tutorhunt-frontend/src/components/reducer.js",[],"/Users/sandeepkumarjha/Documents/IIITB/PE/tutorhunt-frontend/src/components/front.js",[],"/Users/sandeepkumarjha/Documents/IIITB/PE/tutorhunt-frontend/src/components/Home.js",[],"/Users/sandeepkumarjha/Documents/IIITB/PE/tutorhunt-frontend/src/components/login.js",["58"],"import React, { Component} from 'react';\nimport {useHistory,BrowserRouter as  Switch, Route,Link } from \"react-router-dom\";\nimport SignUp from \"./signup.js\";\nimport Footer from \"./footer.js\";\nimport {connect} from \"react-redux\";\n\n   \nclass Login extends Component {\n\n          constructor(props) {\n            super(props);\n            this.handleSubmit=this.handleSubmit.bind(this);\n            \n            this.state = {\n              username:'',\n              password:'',\n              role:''\n            };\n          }\n          history=useHistory;\n          loginUser(credentials) {\n            const payload={\n                username:credentials.username,\n                password: credentials.password,\n                role:credentials.role\n            }\n            console.log(payload.username);\n            fetch('http://localhost:8082/api/signin', {\n              method: 'POST',\n              headers: {\n                'Content-Type': 'application/json'\n              },\n              body: JSON.stringify(payload)\n            })\n              .then(res => res.json())\n              .then((data) => {\n                  if(data.token !== 'T'){\n                   // this.setState.loggedInStatus=\"LOGGED_IN\";\n//                    console.log(data.jwttoken);\n                    this.props.changeName(data.name);\n                    this.props.changeToken(data.token)\n                    this.props.changeUser(data.username)\n                    this.props.changeRole(data.role)\n                    this.props.changeEmail(data.email)\n                    this.props.history.push(\"/dashboard\");\n                    \n                  }\n                  else{\n                    alert(\"Bad Credentials...Try again\");\n                  }\n                }\n                )\n           }\n          \n          \n            \n         handleSubmit = async e => {\n           e.preventDefault();\n          // loginUser({\n          //    username:this.state.username,\n          //    password:this.state.password\n          //  });\n            this.loginUser({username:this.state.username,\n            password:this.state.password,\n            role:'student'});\n           \n         }\n  \n    render() {\n\n\n        return (\n          <div className='App' id='root'>\n          <nav className=\"navbar navbar-expand-lg navbar-light fixed-top\">\n        <div className=\"container\">\n          {/* <Link className=\"navbar-brand\" to={\"/sign-in\"}></Link> */}\n          <div className=\"collapse navbar-collapse\" id=\"navbarTogglerDemo02\">\n            <ul className=\"navbar-nav ml-auto\">\n              <li className=\"nav-item\">\n                <Link className=\"nav-link\"  to={\"/sign-in\"}>Login</Link>\n              </li>\n              <li className=\"nav-item\">\n                <Link className=\"nav-link\"  to={\"/sign-up\"}>Sign-Up</Link>\n              </li>\n            </ul>\n          </div>\n          \n        </div>\n      </nav>\n          \n            <div className=\"auth-wrapper\">\n            <div className=\"auth-inner\">\n            <div class='card-title mt-3'>\n            \n            <form onSubmit={this.handleSubmit}>\n                \n                <h3 font-style=''>Sign In</h3>\n\n                <div className=\"form-group\">\n                    <label>Username</label>\n                    <input name=\"username\" type=\"text\" className=\"form-control\" placeholder=\"Enter username\" onChange={e => this.setState({username:e.target.value})} required/>\n                </div>\n\n                <div className=\"form-group\">\n                    <label>Password</label>\n                    <input name=\"password\" type=\"password\" className=\"form-control\" placeholder=\"Enter password\" onChange={e => this.setState({password:e.target.value})} required/>\n              </div>\n\n                <div className=\"form-group\">\n                    <div className=\"custom-control custom-checkbox\">\n                        <input type=\"checkbox\" className=\"custom-control-input\" id=\"customCheck1\" />\n                        <label className=\"custom-control-label\" htmlFor=\"customCheck1\">Remember Me</label>\n                    </div>\n                </div>\n\n                <button type=\"submit\" className=\"btn btn-primary btn-block\" background-color=\"#ff4516\" >LOGIN</button>\n                <div>\n                <p className=\"forgot-password text-center\" >\n                  <a href=\"/sign-up\">Not Registered ? Sign-Up</a> \n                </p>\n               \n                <p className=\"forgot-password text-center\"> \n                  <a href=\"#\">Forgot Password ?</a>\n                </p>\n                </div>\n                <Switch>\n                    <Route path=\"/sign-up\" component={SignUp} />\n                    \n                </Switch>\n            </form>\n            </div>\n            </div>\n            </div>\n            <Footer />\n            </div>\n            \n        );\n    }\n}\n\nconst mapDispatchToProps = (dispatch)=>{\n  return {\n    changeName:(name)=>{\n      dispatch(\n       \n          {\n            \"type\":\"CHANGE_NAME\",\n           \"payload\":name\n          }\n        \n      )\n    },\n    changeToken:(token)=>{\n      dispatch(\n       \n        {\n          \"type\":\"CHANGE_TOKEN\",\n          \"payload\":token\n        }\n      \n    )\n    },\n    changeEmail:(email)=>{\n      dispatch(\n       \n          {\n            \"type\":\"CHANGE_EMAIL\",\n           \"payload\":email\n          }\n        \n      )\n    },\n    changeRole:(role)=>{\n      dispatch(\n          {\n            \"type\":\"CHANGE_ROLE\",\n           \"payload\":role\n          }\n      )\n    },\n    changeUser:(username)=>{\n      dispatch(\n       \n          {\n            \"type\":\"CHANGE_USER\",\n           \"payload\":username\n          }\n        \n      )\n    },\n  }\n}\n\n\n\nexport default connect(null,mapDispatchToProps)(Login)\n","/Users/sandeepkumarjha/Documents/IIITB/PE/tutorhunt-frontend/src/components/dashboard.js",["59","60","61","62","63"],"/Users/sandeepkumarjha/Documents/IIITB/PE/tutorhunt-frontend/src/components/login_tutor.js",["64"],"import React, { Component} from 'react';\nimport {useHistory,BrowserRouter as  Switch, Route,Link } from \"react-router-dom\";\nimport SignUp_Tutor from \"./signup_tutor.js\";\nimport Footer from \"./footer.js\";\n\n\n   \nexport default class Login extends Component {\n\n          constructor(props) {\n            super(props);\n            this.handleSubmit=this.handleSubmit.bind(this);\n            \n            this.state = {\n              username:'',\n              password:'',\n              role:''\n            };\n          }\n          history=useHistory;\n          loginUser(credentials) {\n            const payload={\n                username:credentials.username,\n                password: credentials.password,\n                role:credentials.role\n            }\n            console.log(payload.username);\n            fetch('http://localhost:8082/api/signin', {\n              method: 'POST',\n              headers: {\n                'Content-Type': 'application/json'\n              },\n              body: JSON.stringify(payload)\n            })\n              .then(res => res.json())\n              .then((data) => {\n                  if(data.jwttoken !== 'T'){\n                   \n                    this.props.history.push(\"/dashboard\");\n                    \n                  }\n                  else{\n                    alert(\"Bad Credentials...Try again\");\n                  }\n                }\n                )\n           }\n          \n          \n            \n         handleSubmit = async e => {\n           e.preventDefault();\n          // loginUser({\n          //    username:this.state.username,\n          //    password:this.state.password\n          //  });\n            this.loginUser({username:this.state.username,\n            password:this.state.password,\n            role:\"tutor\"});\n           \n         }\n  \n    render() {\n\n\n        return (\n          <div className='App' id='root'>\n          <nav className=\"navbar navbar-expand-lg navbar-light fixed-top\">\n        <div className=\"container\">\n          {/* <Link className=\"navbar-brand\" to={\"/sign-in\"}></Link> */}\n          <div className=\"collapse navbar-collapse\" id=\"navbarTogglerDemo02\">\n            <ul className=\"navbar-nav ml-auto\">\n              <li className=\"nav-item\">\n                <Link className=\"nav-link\"  to={\"/sign-in-tutor\"}>Login</Link>\n              </li>\n              <li className=\"nav-item\">\n                <Link className=\"nav-link\"  to={\"/sign-up-tutor\"}>Sign-Up</Link>\n              </li>\n            </ul>\n          </div>\n          \n        </div>\n      </nav>\n          \n            <div className=\"auth-wrapper\">\n            <div className=\"auth-inner\">\n            <div class='card-title mt-3'>\n            \n            <form onSubmit={this.handleSubmit}>\n                \n                <h3 font-style=''>Sign In</h3>\n\n                <div className=\"form-group\">\n                    <label>Username</label>\n                    <input name=\"username\" type=\"text\" className=\"form-control\" placeholder=\"Enter username\" onChange={e => this.setState({username:e.target.value})} required/>\n                </div>\n\n                <div className=\"form-group\">\n                    <label>Password</label>\n                    <input name=\"password\" type=\"password\" className=\"form-control\" placeholder=\"Enter password\" onChange={e => this.setState({password:e.target.value})} required/>\n              </div>\n\n                <div className=\"form-group\">\n                    <div className=\"custom-control custom-checkbox\">\n                        <input type=\"checkbox\" className=\"custom-control-input\" id=\"customCheck1\" />\n                        <label className=\"custom-control-label\" htmlFor=\"customCheck1\">Remember Me</label>\n                    </div>\n                </div>\n\n                <button type=\"submit\" className=\"btn btn-primary btn-block\" background-color=\"#ff4516\" >LOGIN</button>\n                <div>\n                <p className=\"forgot-password text-center\" >\n                  <a href=\"/sign-up-tutor\">Not Registered ? Sign-Up</a> \n                </p>\n               \n                <p className=\"forgot-password text-center\"> \n                  <a href=\"#\">Forgot Password ?</a>\n                </p>\n                </div>\n                <Switch>\n                    <Route path=\"/sign-up-tutor\" component={SignUp_Tutor} />\n                    \n                </Switch>\n            </form>\n            </div>\n            </div>\n            </div>\n            <Footer />\n            </div>\n            \n        );\n    }\n}\n","/Users/sandeepkumarjha/Documents/IIITB/PE/tutorhunt-frontend/src/components/signup_tutor.js",[],"/Users/sandeepkumarjha/Documents/IIITB/PE/tutorhunt-frontend/src/components/signup.js",[],"/Users/sandeepkumarjha/Documents/IIITB/PE/tutorhunt-frontend/src/components/footer.js",[],{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","severity":1,"message":"70","line":4,"column":51,"nodeType":"71","messageId":"72","endLine":4,"endColumn":55},{"ruleId":"69","severity":1,"message":"73","line":8,"column":8,"nodeType":"71","messageId":"72","endLine":8,"endColumn":12},{"ruleId":"74","severity":1,"message":"75","line":16,"column":3,"nodeType":"76","messageId":"77","endLine":19,"endColumn":4},{"ruleId":"78","severity":1,"message":"79","line":123,"column":19,"nodeType":"80","endLine":123,"endColumn":31},{"ruleId":"69","severity":1,"message":"81","line":3,"column":10,"nodeType":"71","messageId":"72","endLine":3,"endColumn":14},{"ruleId":"69","severity":1,"message":"82","line":8,"column":36,"nodeType":"71","messageId":"72","endLine":8,"endColumn":46},{"ruleId":"69","severity":1,"message":"83","line":9,"column":9,"nodeType":"71","messageId":"72","endLine":9,"endColumn":17},{"ruleId":"69","severity":1,"message":"84","line":130,"column":11,"nodeType":"71","messageId":"72","endLine":130,"endColumn":20},{"ruleId":"69","severity":1,"message":"85","line":136,"column":13,"nodeType":"71","messageId":"72","endLine":136,"endColumn":23},{"ruleId":"78","severity":1,"message":"79","line":117,"column":19,"nodeType":"80","endLine":117,"endColumn":31},"no-native-reassign",["86"],"no-negated-in-lhs",["87"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'Home' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'Form' is defined but never used.","'IconButton' is defined but never used.","'MenuIcon' is defined but never used.","'showEmpty' is assigned a value but never used.","'renderCard' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]