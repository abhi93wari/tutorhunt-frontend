[{"/home/abhinav/tutorhunt-frontend/src/index.js":"1","/home/abhinav/tutorhunt-frontend/src/App.js":"2","/home/abhinav/tutorhunt-frontend/src/reportWebVitals.js":"3","/home/abhinav/tutorhunt-frontend/src/components/login.js":"4","/home/abhinav/tutorhunt-frontend/src/components/signup.js":"5","/home/abhinav/tutorhunt-frontend/src/components/footer.js":"6","/home/abhinav/tutorhunt-frontend/src/components/Home.js":"7","/home/abhinav/tutorhunt-frontend/src/components/dashboard.js":"8","/home/abhinav/tutorhunt-frontend/src/components/front.js":"9","/home/abhinav/tutorhunt-frontend/src/components/login_tutor.js":"10","/home/abhinav/tutorhunt-frontend/src/components/signup_tutor.js":"11","/home/abhinav/tutorhunt-frontend/src/components/reducer.js":"12","/home/abhinav/tutorhunt-frontend/src/components/Tutor-reg-form.js":"13","/home/abhinav/tutorhunt-frontend/src/components/login2.js":"14","/home/abhinav/tutorhunt-frontend/src/components/front2.js":"15"},{"size":744,"mtime":1612351933663,"results":"16","hashOfConfig":"17"},{"size":1677,"mtime":1612985670184,"results":"18","hashOfConfig":"17"},{"size":362,"mtime":1610397536510,"results":"19","hashOfConfig":"17"},{"size":5772,"mtime":1612968062627,"results":"20","hashOfConfig":"17"},{"size":4327,"mtime":1612978845753,"results":"21","hashOfConfig":"17"},{"size":576,"mtime":1611737854212,"results":"22","hashOfConfig":"17"},{"size":909,"mtime":1612019350226,"results":"23","hashOfConfig":"17"},{"size":8085,"mtime":1612950143008,"results":"24","hashOfConfig":"17"},{"size":2845,"mtime":1612985558152,"results":"25","hashOfConfig":"17"},{"size":4539,"mtime":1612868439133,"results":"26","hashOfConfig":"17"},{"size":4463,"mtime":1612978873661,"results":"27","hashOfConfig":"17"},{"size":964,"mtime":1612348809895,"results":"28","hashOfConfig":"17"},{"size":3541,"mtime":1612822961619,"results":"29","hashOfConfig":"17"},{"size":3629,"mtime":1612992960765,"results":"30","hashOfConfig":"17"},{"size":2680,"mtime":1612992729331,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"67dzij",{"filePath":"35","messages":"36","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"34"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"34"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"34"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"34"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/abhinav/tutorhunt-frontend/src/index.js",[],["67","68"],"/home/abhinav/tutorhunt-frontend/src/App.js",["69","70","71","72"],"/home/abhinav/tutorhunt-frontend/src/reportWebVitals.js",[],"/home/abhinav/tutorhunt-frontend/src/components/login.js",["73"],"import React, { Component} from 'react';\nimport {useHistory,BrowserRouter as  Switch, Route,Link } from \"react-router-dom\";\nimport SignUp from \"./signup.js\";\nimport Footer from \"./footer.js\";\nimport {connect} from \"react-redux\";\n\n   \nclass Login extends Component {\n\n          constructor(props) {\n            super(props);\n            this.handleSubmit=this.handleSubmit.bind(this);\n            \n            this.state = {\n              username:'',\n              password:'',\n              role:''\n            };\n          }\n          history=useHistory;\n          loginUser(credentials) {\n            const payload={\n                username:credentials.username,\n                password: credentials.password,\n                role:credentials.role\n            }\n            console.log(payload.role);\n            fetch('http://localhost:8086/login', {\n              method: 'POST',\n              headers: {\n                'Content-Type': 'application/json'\n              },\n              body: JSON.stringify(payload)\n            })\n              .then(res => res.json())\n              .then((data) => {\n                  if(data.jwttoken !== 'T'){\n                   // this.setState.loggedInStatus=\"LOGGED_IN\";\n                    console.log(data.jwttoken);\n                    this.props.changeName(data.name);\n                    this.props.changeToken(data.token)\n                    this.props.changeUser(data.username)\n                    this.props.changeRole(data.role)\n                    this.props.changeEmail(data.email)\n                    this.props.history.push(\"/dashboard\");\n                    \n                  }\n                  else{\n                    alert(\"Bad Credentials...Try again\");\n                  }\n                }\n                )\n           }\n          \n          \n            \n         handleSubmit = async e => {\n           e.preventDefault();\n          // loginUser({\n          //    username:this.state.username,\n          //    password:this.state.password\n          //  });\n            this.loginUser({username:this.state.username,\n            password:this.state.password,\n            role:'student'});\n           \n         }\n  \n    render() {\n\n\n        return (\n          <div className='App' id='root'>\n          <nav className=\"navbar navbar-expand-lg navbar-light fixed-top\">\n        <div className=\"container\">\n          {/* <Link className=\"navbar-brand\" to={\"/sign-in\"}></Link> */}\n          <div className=\"collapse navbar-collapse\" id=\"navbarTogglerDemo02\">\n            <ul className=\"navbar-nav ml-auto\">\n              <li className=\"nav-item\">\n                <Link className=\"nav-link\"  to={\"/sign-in\"}>Login</Link>\n              </li>\n              <li className=\"nav-item\">\n                <Link className=\"nav-link\"  to={\"/sign-up\"}>Sign-Up</Link>\n              </li>\n            </ul>\n          </div>\n          \n        </div>\n      </nav>\n          \n            <div className=\"auth-wrapper\">\n            <div className=\"auth-inner\">\n            <div class='card-title mt-3'>\n            \n            <form onSubmit={this.handleSubmit}>\n                \n                <h3 font-style=''>Sign In</h3>\n\n                <div className=\"form-group\">\n                    <label>Username</label>\n                    <input name=\"username\" type=\"text\" className=\"form-control\" placeholder=\"Enter username\" onChange={e => this.setState({username:e.target.value})} required/>\n                </div>\n\n                <div className=\"form-group\">\n                    <label>Password</label>\n                    <input name=\"password\" type=\"password\" className=\"form-control\" placeholder=\"Enter password\" onChange={e => this.setState({password:e.target.value})} required/>\n              </div>\n\n                <div className=\"form-group\">\n                    <div className=\"custom-control custom-checkbox\">\n                        <input type=\"checkbox\" className=\"custom-control-input\" id=\"customCheck1\" />\n                        <label className=\"custom-control-label\" htmlFor=\"customCheck1\">Remember Me</label>\n                    </div>\n                </div>\n\n                <button type=\"submit\" className=\"btn btn-primary btn-block\" background-color=\"#ff4516\" >LOGIN</button>\n                <div>\n                <p className=\"forgot-password text-center\" >\n                  <a href=\"/sign-up\">Not Registered ? Sign-Up</a> \n                </p>\n               \n                <p className=\"forgot-password text-center\"> \n                  <a href=\"#\">Forgot Password ?</a>\n                </p>\n                </div>\n                <Switch>\n                    <Route path=\"/sign-up\" component={SignUp} />\n                    \n                </Switch>\n            </form>\n            </div>\n            </div>\n            </div>\n            <Footer />\n            </div>\n            \n        );\n    }\n}\n\nconst mapDispatchToProps = (dispatch)=>{\n  return {\n    changeName:(name)=>{\n      dispatch(\n       \n          {\n            \"type\":\"CHANGE_NAME\",\n           \"payload\":name\n          }\n        \n      )\n    },\n    changeToken:(token)=>{\n      dispatch(\n       \n        {\n          \"type\":\"CHANGE_TOKEN\",\n          \"payload\":token\n        }\n      \n    )\n    },\n    changeEmail:(email)=>{\n      dispatch(\n       \n          {\n            \"type\":\"CHANGE_EMAIL\",\n           \"payload\":email\n          }\n        \n      )\n    },\n    changeRole:(role)=>{\n      dispatch(\n          {\n            \"type\":\"CHANGE_ROLE\",\n           \"payload\":role\n          }\n      )\n    },\n    changeUser:(username)=>{\n      dispatch(\n       \n          {\n            \"type\":\"CHANGE_USER\",\n           \"payload\":username\n          }\n        \n      )\n    },\n  }\n}\n\n\n\nexport default connect(null,mapDispatchToProps)(Login)\n","/home/abhinav/tutorhunt-frontend/src/components/signup.js",[],"/home/abhinav/tutorhunt-frontend/src/components/footer.js",[],"/home/abhinav/tutorhunt-frontend/src/components/Home.js",[],"/home/abhinav/tutorhunt-frontend/src/components/dashboard.js",["74","75","76","77","78","79","80","81","82","83"],"import React, { Component} from 'react';\nimport {connect} from \"react-redux\";\nimport {BrowserRouter as Switch,Route} from 'react-router-dom';\n//Importing bootstrap and other modules\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/js/bootstrap.min.js';\nimport 'jquery/dist/jquery.min.js';\nimport 'popper.js/dist/umd/popper.min.js'\nimport $ from 'jquery';\nimport tutorregform from './Tutor-reg-form';\n\n\nclass dashboard extends Component {\n\n  \n  constructor(props) {\n    super(props);\n    this.handleSubmit=this.handleSubmit.bind(this);\n    \n    this.state = {\n        \n        course_name:'',\n        age:'',\n        gender:'',\n        qualification:'',\n        objective:'',\n        cost:''\n      \n    };\n  }\n\n  loginUser(info) {\n    const payload={\n        name:this.props.myname,\n        course_name:info.course_name,\n        age:info.age,\n        gender:info.gender,\n        qualification:info.qualification,\n        objective:info.objective,\n        cost:info.cost\n    }\n    console.log(payload.objective,payload.age);\n    fetch('http://localhost:8086/tutor', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(payload)\n    })\n      // .then(res => res.json())\n      .then((data) => {\n          \n          if(data !== 'Course_Registered'){\n           // this.props.handleSuccessfulAuth(data);\n           //handleSuccessfulAuth={this.handleSuccessfulAuth}\n           \n            alert(\"Course Registered Successfully\");\n            \n          }\n          else{\n            alert(\"Invalid data entered...\");\n          }\n        }\n        )\n   }\n  \n  \n    \n handleSubmit = async e => {\n   e.preventDefault();\n  // loginUser({\n  //    username:this.state.username,\n  //    password:this.state.password\n  //  });\n    this.loginUser({\n      course_name:this.state.course_name,\n      age:this.state.age,\n      gender:this.state.gender,\n      qualification:this.state.qualification,\n      objective:this.state.objective,\n      cost:this.state.cost\n    });\n   \n }\n\n\n\n  componentDidMount(){\n    // Sidebar Toggle Menu Click\n    $(\"#menu-toggle\").click(function(e) {\n      e.preventDefault();\n      $(\"#wrapper\").toggleClass(\"toggled\");\n     });\n  }\n  Router = () => {\n    return (\n      <Switch>\n         <Route path=\"/regform\" component={tutorregform} />\n      </Switch>\n    )\n  }\n  render() {\n    return (\n      <div className=\"MainDiv\">\n        <div class=\"d-flex\" id=\"wrapper\">\n            <div class=\"bg-light border-right\" id=\"sidebar-wrapper\">\n              <div class=\"sidebar-heading\">TUTORHUNT </div>\n              <div class=\"list-group list-group-flush\">\n                <a href=\"/regform\" class=\"list-group-item list-group-item-action bg-light\">Registration Form</a>\n                <a href=\"#\" class=\"list-group-item list-group-item-action bg-light\">Link 2</a>\n                <a href=\"#\" class=\"list-group-item list-group-item-action bg-light\">Link 3</a>\n                <a href=\"#\" class=\"list-group-item list-group-item-action bg-light\">Link 4</a>\n                <a href=\"#\" class=\"list-group-item list-group-item-action bg-light\">Link 4</a>\n                <a href=\"#\" class=\"list-group-item list-group-item-action bg-light\">Link 5</a>\n              </div>\n            </div>\n            <div id=\"page-content-wrapper\">\n              <nav class=\"navbar navbar-expand-lg navbar-light bg-light border-bottom\">\n                <button class=\"btn btn-primary\" id=\"menu-toggle\">Toggle Menu</button>\n                <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                  <span class=\"navbar-toggler-icon\"></span>\n                </button>\n                <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n                  <ul class=\"navbar-nav ml-auto mt-2 mt-lg-0\">\n                    <li class=\"nav-item active\">\n                      <a class=\"nav-link\" href=\"#\">Home <span class=\"sr-only\">(current)</span></a>\n                    </li>\n                    <li class=\"nav-item\">\n                      <a class=\"nav-link\" href=\"/sign-in-tutor\">logout</a>\n                    </li>\n                    <li class=\"nav-item dropdown\">\n                      <a class=\"nav-link dropdown-toggle\" href=\"#\" id=\"navbarDropdown\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                        Dropdown\n                      </a>\n                      <div class=\"dropdown-menu dropdown-menu-right\" aria-labelledby=\"navbarDropdown\">\n                        <a class=\"dropdown-item\" href=\"#\">Action</a>\n                        <a class=\"dropdown-item\" href=\"#\">Another action</a>\n                        <div class=\"dropdown-divider\"></div>\n                        <a class=\"dropdown-item\" href=\"#\">Something else here</a>\n                      </div>\n                    </li>\n                  </ul>\n                </div>\n              </nav>\n              \n              <div class=\"container-fluid\">\n                <h1 class=\"mt-4 mb-0 text-gray-800\" style={{textTransform: 'capitalize'}}>Welcome {this.props.myname}</h1>\n                \n                <form onSubmit={this.handleSubmit}>\n                    <h3  align='center'>Add a Course</h3>\n\n                    <div className='form-wrapper'>\n                    <div className=\"form-group\">\n                        <label>Course Name</label>\n                        <input name='course_name' type=\"text\" className=\"form-control\" placeholder=\"Enter course_name\" onChange={e => this.setState({course_name:e.target.value})} required/>\n                    </div>\n\n                    <div className=\"form-group\">\n                        <label>Age</label>\n                        <input name='age' type=\"number\" className=\"form-control\" placeholder=\"Enter Age\" onChange={e => this.setState({age:e.target.value})} required/>\n                    </div>\n\n                    <div className=\"form-group\">\n                        <label>Gender</label>\n                        <select name='gender' type=\"text\" className=\"form-control\" placeholder=\"Enter Gender\" onChange={e => this.setState({gender:e.target.value})} required>\n                          <option value=\"male\">Male</option>\n                          <option value=\"female\">Female</option>                     \n                        </select>\n                        \n                    </div>\n\n                    <div className=\"form-group\">\n                        <label>Qualification</label>\n                        <input name='qualification' type=\"text\" className=\"form-control\" placeholder=\"Enter Qualification\" onChange={e => this.setState({qualification:e.target.value})} required/>\n                    </div>\n\n                    <div className=\"form-group\">\n                        <label>Cost (in Rs)</label>\n                        <input name='cost' type=\"number\" pattern='[0-9]*' className=\"form-control\" placeholder=\"Enter Cost of the course\" onChange={e => this.setState({cost:e.target.value})} required/>\n                    </div>\n\n                    <div className=\"form-group\">\n                        <label>Course Objectice</label>\n                        <input name='objective' type=\"text\" className=\"form-control\" placeholder=\"Enter Course Objective\" onChange={e => this.setState({objective:e.target.value})} required/>\n                    </div>\n\n                    </div>\n                    <div className='submit-button'>\n                    <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\n                    </div>\n\n                </form>\n                \n                \n              </div>\n            </div>\n        </div>\n      </div>\n      \n    );\n  }\n}\nconst mapStateToProps = (state)=> {\n  return {\n    \"myname\":state.name,\n    \"myemail\":state.email,\n    \"role\":state.role,\n    \"token\":state.token,\n    \"course_name\":state.course_name\n}\n}\nexport default connect(mapStateToProps)(dashboard);","/home/abhinav/tutorhunt-frontend/src/components/front.js",["84","85","86","87","88","89","90","91","92","93"],"/home/abhinav/tutorhunt-frontend/src/components/login_tutor.js",["94"],"import React, { Component} from 'react';\nimport {useHistory,BrowserRouter as  Switch, Route,Link } from \"react-router-dom\";\nimport SignUp_Tutor from \"./signup_tutor.js\";\nimport Footer from \"./footer.js\";\n\n\n   \nexport default class Login extends Component {\n\n          constructor(props) {\n            super(props);\n            this.handleSubmit=this.handleSubmit.bind(this);\n            \n            this.state = {\n              username:'',\n              password:'',\n              role:''\n            };\n          }\n          history=useHistory;\n          loginUser(credentials) {\n            const payload={\n                username:credentials.username,\n                password: credentials.password,\n                role:credentials.role\n            }\n            console.log(payload.username);\n            fetch('http://localhost:8086/login', {\n              method: 'POST',\n              headers: {\n                'Content-Type': 'application/json'\n              },\n              body: JSON.stringify(payload)\n            })\n              .then(res => res.json())\n              .then((data) => {\n                  if(data.jwttoken !== 'T'){\n                   \n                    this.props.history.push(\"/dashboard\");\n                    \n                  }\n                  else{\n                    alert(\"Bad Credentials...Try again\");\n                  }\n                }\n                )\n           }\n          \n          \n            \n         handleSubmit = async e => {\n           e.preventDefault();\n          // loginUser({\n          //    username:this.state.username,\n          //    password:this.state.password\n          //  });\n            this.loginUser({username:this.state.username,\n            password:this.state.password,\n            role:'tutor'});\n           \n         }\n  \n    render() {\n\n\n        return (\n          <div className='App' id='root'>\n          <nav className=\"navbar navbar-expand-lg navbar-light fixed-top\">\n        <div className=\"container\">\n          {/* <Link className=\"navbar-brand\" to={\"/sign-in\"}></Link> */}\n          <div className=\"collapse navbar-collapse\" id=\"navbarTogglerDemo02\">\n            <ul className=\"navbar-nav ml-auto\">\n              <li className=\"nav-item\">\n                <Link className=\"nav-link\"  to={\"/sign-in-tutor\"}>Login</Link>\n              </li>\n              <li className=\"nav-item\">\n                <Link className=\"nav-link\"  to={\"/sign-up-tutor\"}>Sign-Up</Link>\n              </li>\n            </ul>\n          </div>\n          \n        </div>\n      </nav>\n          \n            <div className=\"auth-wrapper\">\n            <div className=\"auth-inner\">\n            <div class='card-title mt-3'>\n            \n            <form onSubmit={this.handleSubmit}>\n                \n                <h3 font-style=''>Sign In</h3>\n\n                <div className=\"form-group\">\n                    <label>Username</label>\n                    <input name=\"username\" type=\"text\" className=\"form-control\" placeholder=\"Enter username\" onChange={e => this.setState({username:e.target.value})} required/>\n                </div>\n\n                <div className=\"form-group\">\n                    <label>Password</label>\n                    <input name=\"password\" type=\"password\" className=\"form-control\" placeholder=\"Enter password\" onChange={e => this.setState({password:e.target.value})} required/>\n              </div>\n\n                <div className=\"form-group\">\n                    <div className=\"custom-control custom-checkbox\">\n                        <input type=\"checkbox\" className=\"custom-control-input\" id=\"customCheck1\" />\n                        <label className=\"custom-control-label\" htmlFor=\"customCheck1\">Remember Me</label>\n                    </div>\n                </div>\n\n                <button type=\"submit\" className=\"btn btn-primary btn-block\" background-color=\"#ff4516\" >LOGIN</button>\n                <div>\n                <p className=\"forgot-password text-center\" >\n                  <a href=\"/sign-up-tutor\">Not Registered ? Sign-Up</a> \n                </p>\n               \n                <p className=\"forgot-password text-center\"> \n                  <a href=\"#\">Forgot Password ?</a>\n                </p>\n                </div>\n                <Switch>\n                    <Route path=\"/sign-up-tutor\" component={SignUp_Tutor} />\n                    \n                </Switch>\n            </form>\n            </div>\n            </div>\n            </div>\n            <Footer />\n            </div>\n            \n        );\n    }\n}\n","/home/abhinav/tutorhunt-frontend/src/components/signup_tutor.js",[],"/home/abhinav/tutorhunt-frontend/src/components/reducer.js",[],"/home/abhinav/tutorhunt-frontend/src/components/Tutor-reg-form.js",["95","96","97"],"import React,{Component} from 'react';\nimport {useHistory,BrowserRouter as Switch, Route,Link} from \"react-router-dom\";\n\n\nexport default class tutorregformm extends Component {\n\n\n    constructor(props) {\n        super(props);\n        this.handleSubmit=this.handleSubmit.bind(this);\n        \n        this.state = {\n          username:'',\n          name:'',\n          password:'',\n          email:'',\n          role:''\n          \n        };\n      }\n      history=useHistory;\n      loginUser(info) {\n        const payload={\n            username:info.username,\n            name:info.name,\n            password: info.password,\n            email:info.email,\n            role:info.role\n        }\n        console.log(payload.username,payload.email);\n        fetch('http://localhost:8082/api/signup', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(payload)\n        })\n          // .then(res => res.json())\n          .then((data) => {\n              if(data !== 'registered'){\n               // this.props.handleSuccessfulAuth(data);\n               //handleSuccessfulAuth={this.handleSuccessfulAuth}\n               \n                this.props.history.push(\"/sign-in-tutor\");\n                \n              }\n              else{\n                alert(\"Invalid data entered...\");\n              }\n            }\n            )\n       }\n      \n      \n        \n     handleSubmit = async e => {\n       e.preventDefault();\n      // loginUser({\n      //    username:this.state.username,\n      //    password:this.state.password\n      //  });\n        this.loginUser({\n            username:this.state.username,\n            name:this.state.name,\n            password:this.state.password,\n            email:this.state.email,\n            role:\"tutor\"\n        });\n       \n     }\n\n    render() {\n        return (\n          \n            <div className=\"auth-wrapper\">\n            <div className=\"auth-inner\">\n            <form onSubmit={this.handleSubmit}>\n                <h3>Sign Up</h3>\n\n                <div className=\"form-group\">\n                    <label>Name</label>\n                    <input name='name' type=\"text\" className=\"form-control\" placeholder=\"Enter Name\" onChange={e => this.setState({name:e.target.value})} required />\n                </div>\n\n                <div className=\"form-group\">\n                    <label>Username</label>\n                    <input name='username' type=\"text\" className=\"form-control\" placeholder=\"Enter Username\" onChange={e => this.setState({username:e.target.value})} required/>\n                </div>\n\n                <div className=\"form-group\">\n                    <label>Email address</label>\n                    <input name='email' type=\"email\" className=\"form-control\" placeholder=\"Enter email\" onChange={e => this.setState({email:e.target.value})} required/>\n                </div>\n\n                <div className=\"form-group\">\n                    <label>Password</label>\n                    <input name='password' type=\"password\" className=\"form-control\" placeholder=\"Enter password\" onChange={e => this.setState({password:e.target.value})} required/>\n                </div>\n\n                <button type=\"submit\" className=\"btn btn-primary btn-block\">Sign-Up</button>\n                <p className=\"forgot-password text-right\">\n                    <a href=\"/sign-in-tutor\">Already registered ? Sign-In</a>\n                </p>\n   \n            </form>\n            </div>\n            </div>\n        \n        );\n    }\n}","/home/abhinav/tutorhunt-frontend/src/components/login2.js",["98"],"/home/abhinav/tutorhunt-frontend/src/components/front2.js",["99"],{"ruleId":"100","replacedBy":"101"},{"ruleId":"102","replacedBy":"103"},{"ruleId":"104","severity":1,"message":"105","line":4,"column":51,"nodeType":"106","messageId":"107","endLine":4,"endColumn":55},{"ruleId":"104","severity":1,"message":"108","line":8,"column":8,"nodeType":"106","messageId":"107","endLine":8,"endColumn":12},{"ruleId":"104","severity":1,"message":"109","line":10,"column":8,"nodeType":"106","messageId":"107","endLine":10,"endColumn":13},{"ruleId":"110","severity":1,"message":"111","line":17,"column":3,"nodeType":"112","messageId":"113","endLine":20,"endColumn":4},{"ruleId":"114","severity":1,"message":"115","line":123,"column":19,"nodeType":"116","endLine":123,"endColumn":31},{"ruleId":"114","severity":1,"message":"115","line":110,"column":17,"nodeType":"116","endLine":110,"endColumn":85},{"ruleId":"114","severity":1,"message":"115","line":111,"column":17,"nodeType":"116","endLine":111,"endColumn":85},{"ruleId":"114","severity":1,"message":"115","line":112,"column":17,"nodeType":"116","endLine":112,"endColumn":85},{"ruleId":"114","severity":1,"message":"115","line":113,"column":17,"nodeType":"116","endLine":113,"endColumn":85},{"ruleId":"114","severity":1,"message":"115","line":114,"column":17,"nodeType":"116","endLine":114,"endColumn":85},{"ruleId":"114","severity":1,"message":"115","line":126,"column":23,"nodeType":"116","endLine":126,"endColumn":52},{"ruleId":"114","severity":1,"message":"115","line":132,"column":23,"nodeType":"116","endLine":132,"endColumn":168},{"ruleId":"114","severity":1,"message":"115","line":136,"column":25,"nodeType":"116","endLine":136,"endColumn":59},{"ruleId":"114","severity":1,"message":"115","line":137,"column":25,"nodeType":"116","endLine":137,"endColumn":59},{"ruleId":"114","severity":1,"message":"115","line":139,"column":25,"nodeType":"116","endLine":139,"endColumn":59},{"ruleId":"104","severity":1,"message":"117","line":1,"column":8,"nodeType":"106","messageId":"107","endLine":1,"endColumn":14},{"ruleId":"104","severity":1,"message":"118","line":2,"column":8,"nodeType":"106","messageId":"107","endLine":2,"endColumn":14},{"ruleId":"104","severity":1,"message":"119","line":3,"column":8,"nodeType":"106","messageId":"107","endLine":3,"endColumn":19},{"ruleId":"104","severity":1,"message":"120","line":4,"column":8,"nodeType":"106","messageId":"107","endLine":4,"endColumn":17},{"ruleId":"104","severity":1,"message":"121","line":5,"column":8,"nodeType":"106","messageId":"107","endLine":5,"endColumn":24},{"ruleId":"104","severity":1,"message":"122","line":6,"column":8,"nodeType":"106","messageId":"107","endLine":6,"endColumn":16},{"ruleId":"104","severity":1,"message":"123","line":9,"column":8,"nodeType":"106","messageId":"107","endLine":9,"endColumn":11},{"ruleId":"104","severity":1,"message":"124","line":10,"column":8,"nodeType":"106","messageId":"107","endLine":10,"endColumn":24},{"ruleId":"104","severity":1,"message":"125","line":11,"column":8,"nodeType":"106","messageId":"107","endLine":11,"endColumn":18},{"ruleId":"104","severity":1,"message":"126","line":14,"column":8,"nodeType":"106","messageId":"107","endLine":14,"endColumn":13},{"ruleId":"114","severity":1,"message":"115","line":117,"column":19,"nodeType":"116","endLine":117,"endColumn":31},{"ruleId":"104","severity":1,"message":"127","line":2,"column":37,"nodeType":"106","messageId":"107","endLine":2,"endColumn":43},{"ruleId":"104","severity":1,"message":"128","line":2,"column":45,"nodeType":"106","messageId":"107","endLine":2,"endColumn":50},{"ruleId":"104","severity":1,"message":"105","line":2,"column":51,"nodeType":"106","messageId":"107","endLine":2,"endColumn":55},{"ruleId":"104","severity":1,"message":"126","line":15,"column":8,"nodeType":"106","messageId":"107","endLine":15,"endColumn":13},{"ruleId":"104","severity":1,"message":"124","line":7,"column":8,"nodeType":"106","messageId":"107","endLine":7,"endColumn":24},"no-native-reassign",["129"],"no-negated-in-lhs",["130"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'Home' is defined but never used.","'Login' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'Avatar' is defined but never used.","'Button' is defined but never used.","'CssBaseline' is defined but never used.","'TextField' is defined but never used.","'FormControlLabel' is defined but never used.","'Checkbox' is defined but never used.","'Box' is defined but never used.","'LockOutlinedIcon' is defined but never used.","'Typography' is defined but never used.","'Paper' is defined but never used.","'Switch' is defined but never used.","'Route' is defined but never used.","no-global-assign","no-unsafe-negation"]